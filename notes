The architecture of a system must balance and align the business requirements with the technical capabilities needed to execute those requirements. 
It includes an evaluation of risk, cost, and capability throughout the system and its components.

Security
Perfomance and scale
Availability and Recoverability
Efficience and Operations

Security-----
Two biggest risks you face with a solution, on-prem or in Azure ---- Yourself and Network vulnerabilities


Performance and Scale ------
Scaling - Design with scaling in mind - its too easy to provision heaps of capacity and be done with it. Thats in effective, its in-effective on prem its in effective in the cloud.
Design to scale - architect to scale, develop to scale. (....INSERT SCALE IMAGE HERE...)

Compute resources can be scaled in two different directions:

Scaling up is the action of adding more resources to a single instance.
Scaling out is the addition of instances.

Availability and Recoverability------
A successful cloud environment is designed in a way that anticipates failure at all levels.

Designing for availability focuses on maintaining uptime through small-scale incidents and temporary conditions like partial network outages. You can ensure this is handled by leveraging HA 
capabilities.

Desigin for Recoverability focuses on dealing with data loss from large scale distasters. This is as much about planning as it is execution.

For availability, identify the service-level agreement (SLA) you're committing to. Examine the potential high-availability capabilities of your application relative to your SLA, and identify where you have proper coverage and where you'll need to make improvements. 

Then add redundency to components so that you are less likely to experience an outage.


(....DRAW VM SCENARIO and a PaaS SCENARIO....)


For Recoverability, determine where data loss can occur and then work out recovery strategy and the cost trade off for each. This will help you determine priorities which will help you understand
the importance of the application your running. The output from this should be some data around achievable RTO / RPO.


***** TAKE QUESTIONS FROM PILLARS OF AZURE ARCHITECTURE *****

------

Efficiency and Operations

Cost has spiked since moving to Azure - What do you do????

Waste can show up in several ways. Let's look at a few examples:

A virtual machine that is always 90% idle
Paying for a license included in a virtual machine when a license is already owned
Retaining infrequently accessed data on a storage medium optimized for frequent access
Manually repeating the build of a non-production environment

A great place to start is to look at cost optimization steps like sizing virtual machines properly and deallocating virtual machines that aren't in use.
PaaS services typically cost less than IaaS, and typically bring reduced operational costs along as well. With this comes less zero patching and maintenance (to a degree). which saves
you more $$$

Automate as much as possible. By automating common activities, you can eliminate the delay in waiting for a human to intervene.
Throughout your architecture, you want to have a thorough monitoring, logging, and instrumentation system. This will always give you the capability to see whatâ€™s going on.
Lastly, modern architectures should be designed with DevOps and continuous integration in mind.This will give you the ability to automate deployments using infrastructure as code, 
automate application testing, and build new environments as needed. DevOps is as much cultural as it is technical, but can bring many benefits to organizations that embrace it.